二进制表示0-9，衍生出来十进制表示英文、符号、汉字。

 如果改变编码、解码、存储逻辑，直接使用十进制，就成了精简指令集，精简指令集就是直接使用十进制！

计算机只能认识0和1，如果我用连续9个1，表示9呢

从二进制是计算机基础，直接变成十进制，编程语言革命也要开始了！

原本9是1001，0是0，如果用单个正电荷表示1，空位表示0，只需要四个bit，但目前用8bit，有两种可能。
一种两个bit表示一个0或1，++表示0，+空位表示1。

还有一种就是多出来的四个bit表示衍生出来的东西，表示字母和符号。也就是最底层已经包括了10进制和英文字母、符号。

二进制编码解码器还要工作一遍，多一道流程。我的想法是0表示0，1表示1，11表示2，以此类推，111111111表示9，用连续多个0表示分隔符！

有数字了，汉字、字母、符号、图形怎么表示呢？有10个数字了0-9，就可以用排列组合来表示固定的汉字、字母、字符，调用像素点！
矩阵。

两种方法的区别在于，前者二进制转10进制，同时包含基础符号，再用十进制表示其他。后者十进制只表示数字，继而使用排列组合表示其他！

或者9位一个Byte，用NB表示，全新的文件编码方式！就不需要所谓的分隔符了！


比如，规定a是100 000 000，b是110 000 000，c是个111 000 000，d是111 100 000，e是111 110 000，f是111 111 000，g是111 111 100,h是111 111 110，i是101 111 110，j是100 111 110，k是100 011 110，l是100 001 110，m是100 000 110，n是100 000 010，o是110 100 000，p是110 110 000，q是110 110 100，r是110 110 110， s是111 010 000，u是111 011 000，v是111 011 100，w是111 011 110，x是111 101 000,y是111 101 100，z是111 101 110


首位不能为0，末位不能为1，也就是表达英文的9位数要和表达数字0到9避开，否则会和表示0的 000 000 000，或者表示9的111 111 111，还有之间的数起冲突！

0是000 000 000
1是000 000 001
2是000 000 011
3是000 000 111
4是000 001 111
5是000 011 111
6是000 111 111
7是001 111 111
8是011 111 111
9是111 111 111



2^7=128种
一共9位数，可变7位说是排列组合一共有128种！首尾两位不变！也就是可以完整的表示数字0-9，和英文字母26位大小写，以及部分符号。因为数字0-9我们用了特殊的编码方式，所以总的编码方式是10+128=138种。
10+26*2=62，138-62=76，还有76种编码方式表示+-*/，与其他常用符号！


计算机语言规则有了，现在只需要有人制造编码、解码、内存、闪存就好了！

基础的计算机语言，下一部就是内核，然后是编程语言，计算机系统


这个的数学逻辑是计数器，9个0，就是0，9个1，就是9
首位是0就不是英文字母，末尾是1就是数。


但有两个特殊的存在。9个0是0，末位0却是数。9个1首位是1，却不是英文。

在之前的语法逻辑之上，推出了一个衍生版本，就是首尾都为0或1，但中间有一位为1或0，也就是固定首尾两位数，还有中间任意一位的值。
例如000 010 000和111 101 111，但仍然要排除表示0的 000 000 000和表示9的111 111 111。

衍生版本，就是多固定一位数，成为6位可变编码，而多固定的这一位，在9位中的2至8位！


之前的逻辑是，末位为0，首位就为1，表示英文。 末位1，首位就为0，表示数字。但仍然要排除表示0的 000 000 000和表示9的111 111 111。
补充了一个规则，作为衍生版本，编码量能扩大2的6次方64种，再因为这个中间固定位有七种移动方式，64*7=448种！

首尾均为0，首尾均为1，中间添加一个可变固定位。理论上有448*2=896种编码方式，而这个2-8位固定位出现，需要在前面声明一下第几位是固定位，这个声明编码，可以用7位可变编码中的除数字、字母外的剩余部分中的7*2=14种作为命令！

001 111 110
010 111 110
011 011 110
011 101 110
011 110 110
011 111 010
011 111 100
首尾均为0的，中间写1的地方，也都可以写0，只要这组编码之前加一个声明固定位在哪里的编码。或者直接将8位编码方式兼容了，用来表示数字以外的基础语言，但目的只有一个，废弃二进制！首尾均为1的同理。
110 000 001
101 000 001
100 100 001
100 010 001
100 001 001
100 000 101
100 000 011

大概意思就是首尾都为0的，或者都为1的，你需要告诉系统固定位在哪一位，比如111 101 111，或者000 010 000，当然100 010 001，或者011 101 110也都可以，只要告诉固定位在哪！

首尾都为0的，固定位为1是一种，为0是一种，每一种都有七个位置！

衍生版本，中间至少有1位和首尾不同，区分0和9，也就是7位6可变一种编码方式，或者7位然后再乘以7， 2的6次方*7，64*7=448种，这个是区分0和9的版本。如果用双声明符&&，表示中间的衍生版本编码，9位全部为0或为1的，则不需要区分0和9，达到448*2=896种。
